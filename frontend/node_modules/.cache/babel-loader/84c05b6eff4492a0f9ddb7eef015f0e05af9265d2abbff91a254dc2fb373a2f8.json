{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport api from '../services/api';\nconst useRegistros = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const getRegistros = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await api.get('/registros/');\n      return response.data;\n    } catch (err) {\n      var _err$response;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const createRegistro = async registroData => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await api.post('/registros/', registroData);\n      return response.data;\n    } catch (err) {\n      var _err$response2;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  return {\n    loading,\n    error,\n    getRegistros,\n    createRegistro\n  };\n};\n_s(useRegistros, \"Iz3ozxQ+abMaAIcGIvU8cKUcBeo=\");\nexport default useRegistros;","map":{"version":3,"names":["useState","api","useRegistros","_s","loading","setLoading","error","setError","getRegistros","response","get","data","err","_err$response","message","createRegistro","registroData","post","_err$response2"],"sources":["C:/Users/SENA/Documents/GitHub/Sena_Inventario/recursos/frontend/src/hooks/useRegistros.js"],"sourcesContent":["import { useState } from 'react';\r\nimport api from '../services/api';\r\n\r\nconst useRegistros = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const getRegistros = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await api.get('/registros/');\r\n      return response.data;\r\n    } catch (err) {\r\n      setError(err.response?.data || err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const createRegistro = async (registroData) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await api.post('/registros/', registroData);\r\n      return response.data;\r\n    } catch (err) {\r\n      setError(err.response?.data || err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    getRegistros,\r\n    createRegistro,\r\n  };\r\n};\r\n\r\nexport default useRegistros;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,GAAG,MAAM,iBAAiB;AAEjC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/BH,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMR,GAAG,CAACS,GAAG,CAAC,aAAa,CAAC;MAC7C,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAC,aAAA;MACZN,QAAQ,CAAC,EAAAM,aAAA,GAAAD,GAAG,CAACH,QAAQ,cAAAI,aAAA,uBAAZA,aAAA,CAAcF,IAAI,KAAIC,GAAG,CAACE,OAAO,CAAC;MAC3C,MAAMF,GAAG;IACX,CAAC,SAAS;MACRP,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMU,cAAc,GAAG,MAAOC,YAAY,IAAK;IAC7CX,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMR,GAAG,CAACgB,IAAI,CAAC,aAAa,EAAED,YAAY,CAAC;MAC5D,OAAOP,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAM,cAAA;MACZX,QAAQ,CAAC,EAAAW,cAAA,GAAAN,GAAG,CAACH,QAAQ,cAAAS,cAAA,uBAAZA,cAAA,CAAcP,IAAI,KAAIC,GAAG,CAACE,OAAO,CAAC;MAC3C,MAAMF,GAAG;IACX,CAAC,SAAS;MACRP,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,OAAO;IACLD,OAAO;IACPE,KAAK;IACLE,YAAY;IACZO;EACF,CAAC;AACH,CAAC;AAACZ,EAAA,CAtCID,YAAY;AAwClB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}