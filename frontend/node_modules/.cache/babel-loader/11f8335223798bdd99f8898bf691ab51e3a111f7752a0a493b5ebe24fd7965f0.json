{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: `${process.env.REACT_APP_BACKEND_URL}/api`,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 10000 // 10 segundos de timeout\n});\n\n// Interceptor para añadir el token automáticamente\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Token ${token}`;\n  }\n  return config;\n});\n\n// Interceptor para manejar errores globalmente\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Si el token es inválido, limpiamos el almacenamiento\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userData');\n  }\n  return Promise.reject(error);\n});\n\n// Función de login mejorada\nexport const login = async credentials => {\n  try {\n    const response = await api.post('/auth/login/', credentials);\n    localStorage.setItem('authToken', response.data.token);\n    localStorage.setItem('userData', JSON.stringify(response.data.user));\n\n    // Configura el token para futuras peticiones\n    api.defaults.headers.common['Authorization'] = `Token ${response.data.token}`;\n    return response.data;\n  } catch (error) {\n    console.error('Login error:', error);\n    throw error; // Permite manejar el error en el componente\n  }\n};\n\n// Función para logout\nexport const logout = () => {\n  localStorage.removeItem('authToken');\n  localStorage.removeItem('userData');\n  delete api.defaults.headers.common['Authorization'];\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_BACKEND_URL","headers","timeout","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","status","removeItem","Promise","reject","login","credentials","post","setItem","data","JSON","stringify","user","defaults","common","console","logout"],"sources":["C:/Users/SENA/Documents/GitHub/Sena_Inventario/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: `${process.env.REACT_APP_BACKEND_URL}/api`,\r\n\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  timeout: 10000, // 10 segundos de timeout\r\n});\r\n\r\n// Interceptor para añadir el token automáticamente\r\napi.interceptors.request.use(config => {\r\n  const token = localStorage.getItem('authToken');\r\n  if (token) {\r\n    config.headers.Authorization = `Token ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Interceptor para manejar errores globalmente\r\napi.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    if (error.response?.status === 401) {\r\n      // Si el token es inválido, limpiamos el almacenamiento\r\n      localStorage.removeItem('authToken');\r\n      localStorage.removeItem('userData');\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Función de login mejorada\r\nexport const login = async (credentials) => {\r\n  try {\r\n    const response = await api.post('/auth/login/', credentials);\r\n    \r\n    localStorage.setItem('authToken', response.data.token);\r\n    localStorage.setItem('userData', JSON.stringify(response.data.user));\r\n    \r\n    // Configura el token para futuras peticiones\r\n    api.defaults.headers.common['Authorization'] = `Token ${response.data.token}`;\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Login error:', error);\r\n    throw error; // Permite manejar el error en el componente\r\n  }\r\n};\r\n\r\n// Función para logout\r\nexport const logout = () => {\r\n  localStorage.removeItem('authToken');\r\n  localStorage.removeItem('userData');\r\n  delete api.defaults.headers.common['Authorization'];\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,MAAM;EAEnDC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,OAAO,EAAE,KAAK,CAAE;AAClB,CAAC,CAAC;;AAEF;AACAP,GAAG,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EACrC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC/C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACL,OAAO,CAACS,aAAa,GAAG,SAASH,KAAK,EAAE;EACjD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACAX,GAAG,CAACQ,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAC3BM,QAAQ,IAAIA,QAAQ,EACpBC,KAAK,IAAI;EAAA,IAAAC,eAAA;EACP,IAAI,EAAAA,eAAA,GAAAD,KAAK,CAACD,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClC;IACAN,YAAY,CAACO,UAAU,CAAC,WAAW,CAAC;IACpCP,YAAY,CAACO,UAAU,CAAC,UAAU,CAAC;EACrC;EACA,OAAOC,OAAO,CAACC,MAAM,CAACL,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMM,KAAK,GAAG,MAAOC,WAAW,IAAK;EAC1C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMhB,GAAG,CAACyB,IAAI,CAAC,cAAc,EAAED,WAAW,CAAC;IAE5DX,YAAY,CAACa,OAAO,CAAC,WAAW,EAAEV,QAAQ,CAACW,IAAI,CAACf,KAAK,CAAC;IACtDC,YAAY,CAACa,OAAO,CAAC,UAAU,EAAEE,IAAI,CAACC,SAAS,CAACb,QAAQ,CAACW,IAAI,CAACG,IAAI,CAAC,CAAC;;IAEpE;IACA9B,GAAG,CAAC+B,QAAQ,CAACzB,OAAO,CAAC0B,MAAM,CAAC,eAAe,CAAC,GAAG,SAAShB,QAAQ,CAACW,IAAI,CAACf,KAAK,EAAE;IAE7E,OAAOI,QAAQ,CAACW,IAAI;EACtB,CAAC,CAAC,OAAOV,KAAK,EAAE;IACdgB,OAAO,CAAChB,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpC,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;;AAED;AACA,OAAO,MAAMiB,MAAM,GAAGA,CAAA,KAAM;EAC1BrB,YAAY,CAACO,UAAU,CAAC,WAAW,CAAC;EACpCP,YAAY,CAACO,UAAU,CAAC,UAAU,CAAC;EACnC,OAAOpB,GAAG,CAAC+B,QAAQ,CAACzB,OAAO,CAAC0B,MAAM,CAAC,eAAe,CAAC;AACrD,CAAC;AAED,eAAehC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}