{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SENA\\\\Documents\\\\GitHub\\\\Sena_Inventario\\\\recursos\\\\frontend\\\\src\\\\pages\\\\RegistrosPage.jsx\",\n  _s = $RefreshSig$();\n// ... imports anteriores\nimport useRegistros from '../hooks/useRegistros'; // Sin llaves\nimport { useState } from 'react'; // Para useState\nimport RegistroList from '../components/Registros/RegistroList'; // Para RegistroList\nimport './RegistrosPage.css'; // Importación del CSS en la página\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistrosPage = () => {\n  _s();\n  const {\n    registros,\n    loading,\n    error\n  } = useRegistros();\n  const [filters, setFilters] = useState({\n    categoria: '',\n    sede: '',\n    search: ''\n  });\n  const filteredRegistros = registros.filter(registro => {\n    return (filters.categoria === '' || registro.categoria_base === filters.categoria) && (filters.sede === '' || registro.ambiente.sede.id === filters.sede) && (filters.search === '' || registro.ambiente.nombre.toLowerCase().includes(filters.search.toLowerCase()) || registro.categoria_base.toLowerCase().includes(filters.search.toLowerCase()));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registros-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Buscar...\",\n        onChange: e => setFilters({\n          ...filters,\n          search: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RegistroList, {\n      registros: filteredRegistros\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistrosPage, \"osTvdAL7XWhojftb1w6ga8JzFwQ=\", false, function () {\n  return [useRegistros];\n});\n_c = RegistrosPage;\nexport default RegistrosPage;\nvar _c;\n$RefreshReg$(_c, \"RegistrosPage\");","map":{"version":3,"names":["useRegistros","useState","RegistroList","jsxDEV","_jsxDEV","RegistrosPage","_s","registros","loading","error","filters","setFilters","categoria","sede","search","filteredRegistros","filter","registro","categoria_base","ambiente","id","nombre","toLowerCase","includes","className","children","type","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SENA/Documents/GitHub/Sena_Inventario/recursos/frontend/src/pages/RegistrosPage.jsx"],"sourcesContent":["// ... imports anteriores\r\nimport useRegistros from '../hooks/useRegistros'; // Sin llaves\r\nimport { useState } from 'react'; // Para useState\r\nimport RegistroList from '../components/Registros/RegistroList'; // Para RegistroList\r\nimport './RegistrosPage.css'; // Importación del CSS en la página\r\n\r\nconst RegistrosPage = () => {\r\n  const { registros, loading, error } = useRegistros();\r\n  const [filters, setFilters] = useState({\r\n    categoria: '',\r\n    sede: '',\r\n    search: ''\r\n  });\r\n  \r\n  const filteredRegistros = registros.filter(registro => {\r\n    return (\r\n      (filters.categoria === '' || registro.categoria_base === filters.categoria) &&\r\n      (filters.sede === '' || registro.ambiente.sede.id === filters.sede) &&\r\n      (filters.search === '' || \r\n       registro.ambiente.nombre.toLowerCase().includes(filters.search.toLowerCase()) ||\r\n       registro.categoria_base.toLowerCase().includes(filters.search.toLowerCase()))\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"registros-container\">\r\n      <div className=\"filters\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Buscar...\"\r\n          onChange={(e) => setFilters({...filters, search: e.target.value})}\r\n        />\r\n        {/* Añadir más filtros según necesidad */}\r\n      </div>\r\n      <RegistroList registros={filteredRegistros} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrosPage;"],"mappings":";;AAAA;AACA,OAAOA,YAAY,MAAM,uBAAuB,CAAC,CAAC;AAClD,SAASC,QAAQ,QAAQ,OAAO,CAAC,CAAC;AAClC,OAAOC,YAAY,MAAM,sCAAsC,CAAC,CAAC;AACjE,OAAO,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC,SAAS;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGT,YAAY,CAAC,CAAC;EACpD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC;IACrCW,SAAS,EAAE,EAAE;IACbC,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAGR,SAAS,CAACS,MAAM,CAACC,QAAQ,IAAI;IACrD,OACE,CAACP,OAAO,CAACE,SAAS,KAAK,EAAE,IAAIK,QAAQ,CAACC,cAAc,KAAKR,OAAO,CAACE,SAAS,MACzEF,OAAO,CAACG,IAAI,KAAK,EAAE,IAAII,QAAQ,CAACE,QAAQ,CAACN,IAAI,CAACO,EAAE,KAAKV,OAAO,CAACG,IAAI,CAAC,KAClEH,OAAO,CAACI,MAAM,KAAK,EAAE,IACrBG,QAAQ,CAACE,QAAQ,CAACE,MAAM,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACb,OAAO,CAACI,MAAM,CAACQ,WAAW,CAAC,CAAC,CAAC,IAC7EL,QAAQ,CAACC,cAAc,CAACI,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACb,OAAO,CAACI,MAAM,CAACQ,WAAW,CAAC,CAAC,CAAC,CAAC;EAElF,CAAC,CAAC;EAEF,oBACElB,OAAA;IAAKoB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCrB,OAAA;MAAKoB,SAAS,EAAC,SAAS;MAAAC,QAAA,eACtBrB,OAAA;QACEsB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,WAAW;QACvBC,QAAQ,EAAGC,CAAC,IAAKlB,UAAU,CAAC;UAAC,GAAGD,OAAO;UAAEI,MAAM,EAAEe,CAAC,CAACC,MAAM,CAACC;QAAK,CAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEC,CAAC,eACN/B,OAAA,CAACF,YAAY;MAACK,SAAS,EAAEQ;IAAkB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA/BID,aAAa;EAAA,QACqBL,YAAY;AAAA;AAAAoC,EAAA,GAD9C/B,aAAa;AAiCnB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}