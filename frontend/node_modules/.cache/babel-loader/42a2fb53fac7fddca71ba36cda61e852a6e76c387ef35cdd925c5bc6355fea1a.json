{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport api from '../services/api';\nconst useHomeStats = () => {\n  _s();\n  const [stats, setStats] = useState({\n    consumoTotal: 0,\n    registrosHoy: 0,\n    centrosActivos: 0,\n    usuariosActivos: 0,\n    loading: true,\n    error: null,\n    lastUpdated: null\n  });\n  const fetchStats = async () => {\n    setStats(prev => ({\n      ...prev,\n      loading: true,\n      error: null\n    }));\n    try {\n      const response = await api.get('/estadisticas/home/');\n      if (response.data.error) {\n        throw new Error(response.data.detail || 'Error en el servidor');\n      }\n      setStats({\n        consumoTotal: response.data.consumo_total || 0,\n        registrosHoy: response.data.registros_hoy || 0,\n        centrosActivos: response.data.centros_activos || 0,\n        usuariosActivos: response.data.usuarios_activos || 0,\n        lastUpdated: response.data.ultima_actualizacion || null,\n        loading: false,\n        error: null\n      });\n    } catch (err) {\n      setStats(prev => ({\n        ...prev,\n        loading: false,\n        error: err.message || 'Error al cargar estadísticas'\n      }));\n    }\n  };\n  useEffect(() => {\n    fetchStats();\n\n    // Actualizar cada 5 minutos (opcional)\n    const interval = setInterval(fetchStats, 300000);\n    return () => clearInterval(interval);\n  }, []);\n  return {\n    ...stats,\n    refresh: fetchStats\n  };\n};\n_s(useHomeStats, \"WkUPHb8IsWRkmAhPeQZRspWuQw8=\");\nexport default useHomeStats;","map":{"version":3,"names":["useState","useEffect","api","useHomeStats","_s","stats","setStats","consumoTotal","registrosHoy","centrosActivos","usuariosActivos","loading","error","lastUpdated","fetchStats","prev","response","get","data","Error","detail","consumo_total","registros_hoy","centros_activos","usuarios_activos","ultima_actualizacion","err","message","interval","setInterval","clearInterval","refresh"],"sources":["C:/Users/SENA/Documents/GitHub/Sena_Inventario/frontend/src/hooks/UseHomeStats.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport api from '../services/api';\r\n\r\nconst useHomeStats = () => {\r\n  const [stats, setStats] = useState({\r\n    consumoTotal: 0,\r\n    registrosHoy: 0,\r\n    centrosActivos: 0,\r\n    usuariosActivos: 0,\r\n    loading: true,\r\n    error: null,\r\n    lastUpdated: null\r\n  });\r\n\r\n  const fetchStats = async () => {\r\n    setStats(prev => ({ ...prev, loading: true, error: null }));\r\n    \r\n    try {\r\n      const response = await api.get('/estadisticas/home/');\r\n      \r\n      if (response.data.error) {\r\n        throw new Error(response.data.detail || 'Error en el servidor');\r\n      }\r\n      \r\n      setStats({\r\n        consumoTotal: response.data.consumo_total || 0,\r\n        registrosHoy: response.data.registros_hoy || 0,\r\n        centrosActivos: response.data.centros_activos || 0,\r\n        usuariosActivos: response.data.usuarios_activos || 0,\r\n        lastUpdated: response.data.ultima_actualizacion || null,\r\n        loading: false,\r\n        error: null\r\n      });\r\n      \r\n    } catch (err) {\r\n      setStats(prev => ({\r\n        ...prev,\r\n        loading: false,\r\n        error: err.message || 'Error al cargar estadísticas'\r\n      }));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchStats();\r\n    \r\n    // Actualizar cada 5 minutos (opcional)\r\n    const interval = setInterval(fetchStats, 300000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return { ...stats, refresh: fetchStats };\r\n};\r\n\r\nexport default useHomeStats;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,GAAG,MAAM,iBAAiB;AAEjC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC;IACjCO,YAAY,EAAE,CAAC;IACfC,YAAY,EAAE,CAAC;IACfC,cAAc,EAAE,CAAC;IACjBC,eAAe,EAAE,CAAC;IAClBC,OAAO,EAAE,IAAI;IACbC,KAAK,EAAE,IAAI;IACXC,WAAW,EAAE;EACf,CAAC,CAAC;EAEF,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7BR,QAAQ,CAACS,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAEJ,OAAO,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC,CAAC;IAE3D,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMd,GAAG,CAACe,GAAG,CAAC,qBAAqB,CAAC;MAErD,IAAID,QAAQ,CAACE,IAAI,CAACN,KAAK,EAAE;QACvB,MAAM,IAAIO,KAAK,CAACH,QAAQ,CAACE,IAAI,CAACE,MAAM,IAAI,sBAAsB,CAAC;MACjE;MAEAd,QAAQ,CAAC;QACPC,YAAY,EAAES,QAAQ,CAACE,IAAI,CAACG,aAAa,IAAI,CAAC;QAC9Cb,YAAY,EAAEQ,QAAQ,CAACE,IAAI,CAACI,aAAa,IAAI,CAAC;QAC9Cb,cAAc,EAAEO,QAAQ,CAACE,IAAI,CAACK,eAAe,IAAI,CAAC;QAClDb,eAAe,EAAEM,QAAQ,CAACE,IAAI,CAACM,gBAAgB,IAAI,CAAC;QACpDX,WAAW,EAAEG,QAAQ,CAACE,IAAI,CAACO,oBAAoB,IAAI,IAAI;QACvDd,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;MACT,CAAC,CAAC;IAEJ,CAAC,CAAC,OAAOc,GAAG,EAAE;MACZpB,QAAQ,CAACS,IAAI,KAAK;QAChB,GAAGA,IAAI;QACPJ,OAAO,EAAE,KAAK;QACdC,KAAK,EAAEc,GAAG,CAACC,OAAO,IAAI;MACxB,CAAC,CAAC,CAAC;IACL;EACF,CAAC;EAED1B,SAAS,CAAC,MAAM;IACda,UAAU,CAAC,CAAC;;IAEZ;IACA,MAAMc,QAAQ,GAAGC,WAAW,CAACf,UAAU,EAAE,MAAM,CAAC;IAChD,OAAO,MAAMgB,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAE,GAAGvB,KAAK;IAAE0B,OAAO,EAAEjB;EAAW,CAAC;AAC1C,CAAC;AAACV,EAAA,CAjDID,YAAY;AAmDlB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}