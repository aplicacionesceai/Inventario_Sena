{"ast":null,"code":"import{useState,useEffect}from'react';import api from'../services/api';const useHomeStats=()=>{const[stats,setStats]=useState({consumoTotal:0,registrosHoy:0,centrosActivos:0,usuariosActivos:0,loading:true,error:null,lastUpdated:null});const fetchStats=async()=>{setStats(prev=>({...prev,loading:true,error:null}));try{const response=await api.get('/estadisticas/home/');if(response.data.error){throw new Error(response.data.detail||'Error en el servidor');}setStats({consumoTotal:response.data.consumo_total||0,registrosHoy:response.data.registros_hoy||0,centrosActivos:response.data.centros_activos||0,usuariosActivos:response.data.usuarios_activos||0,lastUpdated:response.data.ultima_actualizacion||null,loading:false,error:null});}catch(err){setStats(prev=>({...prev,loading:false,error:err.message||'Error al cargar estadísticas'}));}};useEffect(()=>{fetchStats();// Actualizar cada 5 minutos (opcional)\nconst interval=setInterval(fetchStats,300000);return()=>clearInterval(interval);},[]);return{...stats,refresh:fetchStats};};export default useHomeStats;","map":{"version":3,"names":["useState","useEffect","api","useHomeStats","stats","setStats","consumoTotal","registrosHoy","centrosActivos","usuariosActivos","loading","error","lastUpdated","fetchStats","prev","response","get","data","Error","detail","consumo_total","registros_hoy","centros_activos","usuarios_activos","ultima_actualizacion","err","message","interval","setInterval","clearInterval","refresh"],"sources":["C:/Users/SENA/Documents/GitHub/Sena_Inventario/frontend/src/hooks/UseHomeStats.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport api from '../services/api';\r\n\r\nconst useHomeStats = () => {\r\n  const [stats, setStats] = useState({\r\n    consumoTotal: 0,\r\n    registrosHoy: 0,\r\n    centrosActivos: 0,\r\n    usuariosActivos: 0,\r\n    loading: true,\r\n    error: null,\r\n    lastUpdated: null\r\n  });\r\n\r\n  const fetchStats = async () => {\r\n    setStats(prev => ({ ...prev, loading: true, error: null }));\r\n    \r\n    try {\r\n      const response = await api.get('/estadisticas/home/');\r\n      \r\n      if (response.data.error) {\r\n        throw new Error(response.data.detail || 'Error en el servidor');\r\n      }\r\n      \r\n      setStats({\r\n        consumoTotal: response.data.consumo_total || 0,\r\n        registrosHoy: response.data.registros_hoy || 0,\r\n        centrosActivos: response.data.centros_activos || 0,\r\n        usuariosActivos: response.data.usuarios_activos || 0,\r\n        lastUpdated: response.data.ultima_actualizacion || null,\r\n        loading: false,\r\n        error: null\r\n      });\r\n      \r\n    } catch (err) {\r\n      setStats(prev => ({\r\n        ...prev,\r\n        loading: false,\r\n        error: err.message || 'Error al cargar estadísticas'\r\n      }));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchStats();\r\n    \r\n    // Actualizar cada 5 minutos (opcional)\r\n    const interval = setInterval(fetchStats, 300000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return { ...stats, refresh: fetchStats };\r\n};\r\n\r\nexport default useHomeStats;"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAO,CAAAC,GAAG,KAAM,iBAAiB,CAEjC,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGL,QAAQ,CAAC,CACjCM,YAAY,CAAE,CAAC,CACfC,YAAY,CAAE,CAAC,CACfC,cAAc,CAAE,CAAC,CACjBC,eAAe,CAAE,CAAC,CAClBC,OAAO,CAAE,IAAI,CACbC,KAAK,CAAE,IAAI,CACXC,WAAW,CAAE,IACf,CAAC,CAAC,CAEF,KAAM,CAAAC,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7BR,QAAQ,CAACS,IAAI,GAAK,CAAE,GAAGA,IAAI,CAAEJ,OAAO,CAAE,IAAI,CAAEC,KAAK,CAAE,IAAK,CAAC,CAAC,CAAC,CAE3D,GAAI,CACF,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAb,GAAG,CAACc,GAAG,CAAC,qBAAqB,CAAC,CAErD,GAAID,QAAQ,CAACE,IAAI,CAACN,KAAK,CAAE,CACvB,KAAM,IAAI,CAAAO,KAAK,CAACH,QAAQ,CAACE,IAAI,CAACE,MAAM,EAAI,sBAAsB,CAAC,CACjE,CAEAd,QAAQ,CAAC,CACPC,YAAY,CAAES,QAAQ,CAACE,IAAI,CAACG,aAAa,EAAI,CAAC,CAC9Cb,YAAY,CAAEQ,QAAQ,CAACE,IAAI,CAACI,aAAa,EAAI,CAAC,CAC9Cb,cAAc,CAAEO,QAAQ,CAACE,IAAI,CAACK,eAAe,EAAI,CAAC,CAClDb,eAAe,CAAEM,QAAQ,CAACE,IAAI,CAACM,gBAAgB,EAAI,CAAC,CACpDX,WAAW,CAAEG,QAAQ,CAACE,IAAI,CAACO,oBAAoB,EAAI,IAAI,CACvDd,OAAO,CAAE,KAAK,CACdC,KAAK,CAAE,IACT,CAAC,CAAC,CAEJ,CAAE,MAAOc,GAAG,CAAE,CACZpB,QAAQ,CAACS,IAAI,GAAK,CAChB,GAAGA,IAAI,CACPJ,OAAO,CAAE,KAAK,CACdC,KAAK,CAAEc,GAAG,CAACC,OAAO,EAAI,8BACxB,CAAC,CAAC,CAAC,CACL,CACF,CAAC,CAEDzB,SAAS,CAAC,IAAM,CACdY,UAAU,CAAC,CAAC,CAEZ;AACA,KAAM,CAAAc,QAAQ,CAAGC,WAAW,CAACf,UAAU,CAAE,MAAM,CAAC,CAChD,MAAO,IAAMgB,aAAa,CAACF,QAAQ,CAAC,CACtC,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAE,GAAGvB,KAAK,CAAE0B,OAAO,CAAEjB,UAAW,CAAC,CAC1C,CAAC,CAED,cAAe,CAAAV,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}