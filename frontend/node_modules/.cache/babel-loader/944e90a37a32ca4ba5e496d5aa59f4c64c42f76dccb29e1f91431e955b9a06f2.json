{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport api from '../services/api';\nconst useRegistros = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const createRegistro = async registroData => {\n    setLoading(true);\n    setError(null);\n    try {\n      // 1. Crear ambiente primero\n      const ambienteRes = await api.post('/ambientes/', {\n        sede: registroData.ambiente.sede,\n        bloque: registroData.ambiente.bloque,\n        piso: registroData.ambiente.piso,\n        tipo_ambiente: registroData.ambiente.tipo_ambiente,\n        nombre: registroData.ambiente.nombre\n      });\n\n      // 2. Crear registro con el ID del ambiente\n      const registroPayload = {\n        ...registroData,\n        ambiente: ambienteRes.data.id\n      };\n      const registroRes = await api.post('/registros/', registroPayload);\n      return registroRes.data;\n    } catch (err) {\n      var _err$response;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  return {\n    createRegistro,\n    loading,\n    error\n  };\n};\n_s(useRegistros, \"Iz3ozxQ+abMaAIcGIvU8cKUcBeo=\");\nexport default useRegistros;","map":{"version":3,"names":["useState","api","useRegistros","_s","loading","setLoading","error","setError","createRegistro","registroData","ambienteRes","post","sede","ambiente","bloque","piso","tipo_ambiente","nombre","registroPayload","data","id","registroRes","err","_err$response","response","message"],"sources":["C:/Users/SENA/Documents/GitHub/Sena_Inventario/recursos/frontend/src/hooks/useRegistros.js"],"sourcesContent":["import { useState } from 'react';\r\nimport api from '../services/api';\r\n\r\nconst useRegistros = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const createRegistro = async (registroData) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      // 1. Crear ambiente primero\r\n      const ambienteRes = await api.post('/ambientes/', {\r\n        sede: registroData.ambiente.sede,\r\n        bloque: registroData.ambiente.bloque,\r\n        piso: registroData.ambiente.piso,\r\n        tipo_ambiente: registroData.ambiente.tipo_ambiente,\r\n        nombre: registroData.ambiente.nombre\r\n      });\r\n      \r\n      // 2. Crear registro con el ID del ambiente\r\n      const registroPayload = {\r\n        ...registroData,\r\n        ambiente: ambienteRes.data.id\r\n      };\r\n      \r\n      const registroRes = await api.post('/registros/', registroPayload);\r\n      return registroRes.data;\r\n    } catch (err) {\r\n      setError(err.response?.data || err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    createRegistro,\r\n    loading,\r\n    error\r\n  };\r\n};\r\n\r\nexport default useRegistros;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,GAAG,MAAM,iBAAiB;AAEjC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMQ,cAAc,GAAG,MAAOC,YAAY,IAAK;IAC7CJ,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF;MACA,MAAMG,WAAW,GAAG,MAAMT,GAAG,CAACU,IAAI,CAAC,aAAa,EAAE;QAChDC,IAAI,EAAEH,YAAY,CAACI,QAAQ,CAACD,IAAI;QAChCE,MAAM,EAAEL,YAAY,CAACI,QAAQ,CAACC,MAAM;QACpCC,IAAI,EAAEN,YAAY,CAACI,QAAQ,CAACE,IAAI;QAChCC,aAAa,EAAEP,YAAY,CAACI,QAAQ,CAACG,aAAa;QAClDC,MAAM,EAAER,YAAY,CAACI,QAAQ,CAACI;MAChC,CAAC,CAAC;;MAEF;MACA,MAAMC,eAAe,GAAG;QACtB,GAAGT,YAAY;QACfI,QAAQ,EAAEH,WAAW,CAACS,IAAI,CAACC;MAC7B,CAAC;MAED,MAAMC,WAAW,GAAG,MAAMpB,GAAG,CAACU,IAAI,CAAC,aAAa,EAAEO,eAAe,CAAC;MAClE,OAAOG,WAAW,CAACF,IAAI;IACzB,CAAC,CAAC,OAAOG,GAAG,EAAE;MAAA,IAAAC,aAAA;MACZhB,QAAQ,CAAC,EAAAgB,aAAA,GAAAD,GAAG,CAACE,QAAQ,cAAAD,aAAA,uBAAZA,aAAA,CAAcJ,IAAI,KAAIG,GAAG,CAACG,OAAO,CAAC;MAC3C,MAAMH,GAAG;IACX,CAAC,SAAS;MACRjB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,OAAO;IACLG,cAAc;IACdJ,OAAO;IACPE;EACF,CAAC;AACH,CAAC;AAACH,EAAA,CAtCID,YAAY;AAwClB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}